var r=Object.defineProperty;var f=(i,t,s)=>t in i?r(i,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):i[t]=s;var l=(i,t,s)=>(f(i,typeof t!="symbol"?t+"":t,s),s);import{S as u,bg as c}from"./index.e3ba3853.js";const p=20;class g{constructor(){l(this,"rows",5);l(this,"cols",5);l(this,"subtitle");l(this,"customName");l(this,"allCellData",[]);l(this,"spotify",u);l(this,"numberOfSheets",p);l(this,"_winners",{});l(this,"shuffledData",[]);l(this,"_playlistInfo");l(this,"songLimit",c)}populate(t){this.allCellData=t,this.shuffledData=[],this._populate()}_populate(){const t=new Set;for(;t.size<this.numberOfSheets;){const s=this.shuffle(this.allCellData).slice(0,this.rows*this.cols),e=JSON.stringify(s);t.has(e)||(t.add(e),this.shuffledData.push(s))}}shuffle(t){const s=t.slice();for(let e=s.length-1;e>0;e--){const o=Math.floor(Math.random()*(e+1));[s[e],s[o]]=[s[o],s[e]]}return s}fetchTable(t){if(t>=this.shuffledData.length)return console.error("Index is greater than the number of sheets"),[[]];const s=this.shuffledData[t],e=[];let o=0;for(let a=0;a<this.rows;a++){const n=[];for(let h=0;h<this.cols;h++)n.push(s[o]),o++;e.push(n)}return e}get isPopulated(){return this.allCellData.length>0}generate(t,s){if(this._playlistInfo=t,this.numberOfSheets>0){const e=s.map(o=>`${o.name} - ${o.artists.map(a=>a.name).join(", ")}`);e.length<this.rows*this.cols?console.error("Not enough songs in the playlist"):this.populate(e)}}get playlistURL(){return this._playlistInfo.external_urls.spotify}}const D=new g;export{D as B};
